<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.silbaram.dao.MemberDAO">

    <!--회원가입-->
    <insert id="insertMember" useGeneratedKeys="true" keyProperty="mid">
        INSERT INTO `member` (`userId`, `password`, `nickName`, `name`, `birthDate`, `gender`, `phoneNumber`,
                              `email`, `zipcode`, `address1`, `address2`, `socialLogin`, `isAdmin`)
        VALUES (#{userId}, #{password}, #{nickName}, #{name}, #{birthDate}, #{gender}, #{phoneNumber},
                #{email}, #{zipcode}, #{address1}, #{address2}, #{socialLogin}, #{isAdmin})
    </insert>

    <!--  아이디 중복 조회  -->
    <select id="countMemberByUserId" parameterType="String" resultType="Integer">
        SELECT COUNT(*)
        FROM `member`
        WHERE `userId` = #{userId}
    </select>
    <!--  닉네임 중복 조회  -->
    <select id="countMemberByUserNickName" parameterType="String" resultType="Integer">
        SELECT COUNT(*)
        FROM `member`
        WHERE `nickName` = #{nickName}
    </select>

    <!-- 로그인 -->
    <select id="selectMemberById" resultType="com.project.silbaram.vo.MemberVO">
        SELECT *
        FROM `member`
        WHERE `userId` = #{userId}
    </select>

    <!-- 회원정보 불러오기 -->
    <select id="selectMemberByMid" resultType="com.project.silbaram.vo.MemberVO">
        SELECT *
        FROM `member`
        WHERE `mid` = #{mid}
    </select>

    <!--  회원정보 수정  -->
    <update id="updateMember">
        UPDATE member
        SET nickName    = IFNULL(#{nickName}, nickName),
            phoneNumber = IFNULL(#{phoneNumber}, phoneNumber),
            email       = IFNULL(#{email}, email),
            zipcode     = IFNULL(#{zipcode}, zipcode),
            address1    = IFNULL(#{address1}, address1),
            address2    = IFNULL(#{address2}, address2)
        WHERE mid = #{mid};

    </update>


    <!--  비밀번호 수정  -->
    <update id="updatePassword">
        UPDATE member
        SET password    = IFNULL(#{nickName}, password)
        WHERE mid = #{mid};

    </update>
    <!--    <update id="updateMember">-->
    <!--        UPDATE `member`-->
    <!--        SET `nickName` =-->
    <!--                CASE-->
    <!--                    WHEN #{nickName} IS NULL THEN `nickName`-->
    <!--                    ELSE #{nickName}-->
    <!--                    END,-->
    <!--            `phoneNumber` =-->
    <!--                CASE-->
    <!--                    WHEN #{phoneNumber} IS NULL THEN `phoneNumber`-->
    <!--                    ELSE #{phoneNumber}-->
    <!--                    END,-->
    <!--            `email` =-->
    <!--                CASE-->
    <!--                    WHEN #{email} IS NULL THEN `email`-->
    <!--                    ELSE #{email}-->
    <!--                    END,-->
    <!--            `zipcode` =-->
    <!--                CASE-->
    <!--                    WHEN #{zipcode} IS NULL THEN `zipcode`-->
    <!--                    ELSE #{zipcode}-->
    <!--                    END,-->
    <!--            `address` =-->
    <!--                CASE-->
    <!--                    WHEN #{address} IS NULL THEN `address`-->
    <!--                    ELSE #{address}-->
    <!--                    END-->
    <!--        WHERE `mid` = #{mid}-->
    <!--    </update>-->

    <!--    <update id="updateUuid" parameterType="String, String">-->
    <!--        UPDATE `member` SET `uuid` = #{uuid} WHERE `mid` = #{userId}-->
    <!--    </update>-->

    <!--&lt;!&ndash;    <select id="selectUuid" resultType="com.project.silbaram.vo.MemberVO">&ndash;&gt;-->
    <!--&lt;!&ndash;        SELECT `mid`,`mpw`, `mname`, `uuid` FROM `member` WHERE `uuid` = #{uuid}&ndash;&gt;-->
    <!--&lt;!&ndash;    </select>&ndash;&gt;-->


</mapper>

